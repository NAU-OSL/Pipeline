{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 80,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import csv \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "491\n"
     ]
    }
   ],
   "source": [
    "data = []\n",
    "with open('/Users/fd252/Documents/Cursos3/NAU/Research2/Python/Data/aprioriBodyTitle.csv') as f:\n",
    "    lines = f.readlines()\n",
    "    for line in lines:\n",
    "        data.append(len(line.split()))\n",
    "\n",
    "#if necessary add 1\n",
    "N = max(data)\n",
    "print (N)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "# inside range set the maximum value you can see in \"Expected 4 fields in line 2, saw 8\"\n",
    "# here will be 8\n",
    "\n",
    "data = pd.read_csv(\"/Users/fd252/Documents/Cursos3/NAU/Research2/Python/Data/aprioriBodyTitle.csv\",header = None,names=range(490))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "metadata": {},
   "outputs": [],
   "source": [
    "#df = pd.read_csv('/Users/fd252/Documents/Cursos3/NAU/Research2/Python/Data/aprioriBodyTitle.csv', sep=\",\",  skiprows = 1, names = range(N))\n",
    "#df = pd.read_csv('/Users/fd252/Documents/Cursos3/NAU/Research2/Python/Data/aprioriBodyTitle.csv', sep=\",\",  names = range(N))\n",
    "#df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "      <th>7</th>\n",
       "      <th>8</th>\n",
       "      <th>9</th>\n",
       "      <th>...</th>\n",
       "      <th>480</th>\n",
       "      <th>481</th>\n",
       "      <th>482</th>\n",
       "      <th>483</th>\n",
       "      <th>484</th>\n",
       "      <th>485</th>\n",
       "      <th>486</th>\n",
       "      <th>487</th>\n",
       "      <th>488</th>\n",
       "      <th>489</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>New Sorting/Export preferences</td>\n",
       "      <td>This will add a new  File Sorting  Tab to the ...</td>\n",
       "      <td>Throws</td>\n",
       "      <td>Logging</td>\n",
       "      <td>UI</td>\n",
       "      <td>User Preferences</td>\n",
       "      <td>Utils</td>\n",
       "      <td>Data Structure</td>\n",
       "      <td>IO</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>I have implemented 2 features requested in Tic...</td>\n",
       "      <td>The user can now specify an arbitrary number o...</td>\n",
       "      <td>IO</td>\n",
       "      <td>Utils</td>\n",
       "      <td>Throws</td>\n",
       "      <td>Logging</td>\n",
       "      <td>Network</td>\n",
       "      <td>UI</td>\n",
       "      <td>User Preferences</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>10</td>\n",
       "      <td>try to fix some obvious bugs about  groups</td>\n",
       "      <td>Hi All  I just upgraded to 2.10 and I found so...</td>\n",
       "      <td>Data Structure</td>\n",
       "      <td>Utils</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>11</td>\n",
       "      <td>BugFix for bug  #880 PubMed Import broken</td>\n",
       "      <td>Found bug: PubMed/Medline PLAIN format recogni...</td>\n",
       "      <td>Utils</td>\n",
       "      <td>Text Utility</td>\n",
       "      <td>IO</td>\n",
       "      <td>Data Structure</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>15</td>\n",
       "      <td>Make (un)abbreviating journal titles also work...</td>\n",
       "      <td>I ve (i) added the toggle button to the  journ...</td>\n",
       "      <td>Concurrency</td>\n",
       "      <td>Logging</td>\n",
       "      <td>Data Structure</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 490 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   0                                                  1    \\\n",
       "0    1                     New Sorting/Export preferences   \n",
       "1    7  I have implemented 2 features requested in Tic...   \n",
       "2   10         try to fix some obvious bugs about  groups   \n",
       "3   11          BugFix for bug  #880 PubMed Import broken   \n",
       "4   15  Make (un)abbreviating journal titles also work...   \n",
       "\n",
       "                                                 2               3    \\\n",
       "0  This will add a new  File Sorting  Tab to the ...          Throws   \n",
       "1  The user can now specify an arbitrary number o...              IO   \n",
       "2  Hi All  I just upgraded to 2.10 and I found so...  Data Structure   \n",
       "3  Found bug: PubMed/Medline PLAIN format recogni...           Utils   \n",
       "4  I ve (i) added the toggle button to the  journ...     Concurrency   \n",
       "\n",
       "            4               5                 6        7               8    \\\n",
       "0       Logging              UI  User Preferences    Utils  Data Structure   \n",
       "1         Utils          Throws           Logging  Network              UI   \n",
       "2         Utils             NaN               NaN      NaN             NaN   \n",
       "3  Text Utility              IO    Data Structure      NaN             NaN   \n",
       "4       Logging  Data Structure               NaN      NaN             NaN   \n",
       "\n",
       "                9    ... 480 481 482 483 484 485 486 487 488 489  \n",
       "0                IO  ... NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN  \n",
       "1  User Preferences  ... NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN  \n",
       "2               NaN  ... NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN  \n",
       "3               NaN  ... NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN  \n",
       "4               NaN  ... NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN  \n",
       "\n",
       "[5 rows x 490 columns]"
      ]
     },
     "execution_count": 84,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PR</th>\n",
       "      <th>title</th>\n",
       "      <th>body</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>New Sorting/Export preferences</td>\n",
       "      <td>This will add a new  File Sorting  Tab to the ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>I have implemented 2 features requested in Tic...</td>\n",
       "      <td>The user can now specify an arbitrary number o...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>10</td>\n",
       "      <td>try to fix some obvious bugs about  groups</td>\n",
       "      <td>Hi All  I just upgraded to 2.10 and I found so...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>11</td>\n",
       "      <td>BugFix for bug  #880 PubMed Import broken</td>\n",
       "      <td>Found bug: PubMed/Medline PLAIN format recogni...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>15</td>\n",
       "      <td>Make (un)abbreviating journal titles also work...</td>\n",
       "      <td>I ve (i) added the toggle button to the  journ...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   PR                                              title  \\\n",
       "0   1                     New Sorting/Export preferences   \n",
       "1   7  I have implemented 2 features requested in Tic...   \n",
       "2  10         try to fix some obvious bugs about  groups   \n",
       "3  11          BugFix for bug  #880 PubMed Import broken   \n",
       "4  15  Make (un)abbreviating journal titles also work...   \n",
       "\n",
       "                                                body  \n",
       "0  This will add a new  File Sorting  Tab to the ...  \n",
       "1  The user can now specify an arbitrary number o...  \n",
       "2  Hi All  I just upgraded to 2.10 and I found so...  \n",
       "3  Found bug: PubMed/Medline PLAIN format recogni...  \n",
       "4  I ve (i) added the toggle button to the  journ...  "
      ]
     },
     "execution_count": 85,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_title_body = data.loc[:, 0:2]\n",
    "df_title_body.columns = ['PR', 'title', 'body']\n",
    "\n",
    "df_title_body.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['PR', 'title', 'body'], dtype='object')"
      ]
     },
     "execution_count": 86,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_title_body.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "metadata": {},
   "outputs": [],
   "source": [
    "#df_title = df[[0,1]]\n",
    "#df_title.columns = ['PR', 'title']\n",
    "\n",
    "#df_title.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "metadata": {},
   "outputs": [],
   "source": [
    "#type(df_title)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "metadata": {},
   "outputs": [],
   "source": [
    "#df_body = df[[0,2]]\n",
    "#df_body.columns = ['PR', 'body']\n",
    "\n",
    "#df_body.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "      <th>7</th>\n",
       "      <th>8</th>\n",
       "      <th>9</th>\n",
       "      <th>10</th>\n",
       "      <th>...</th>\n",
       "      <th>478</th>\n",
       "      <th>479</th>\n",
       "      <th>480</th>\n",
       "      <th>481</th>\n",
       "      <th>482</th>\n",
       "      <th>483</th>\n",
       "      <th>484</th>\n",
       "      <th>485</th>\n",
       "      <th>486</th>\n",
       "      <th>487</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>Throws</td>\n",
       "      <td>Logging</td>\n",
       "      <td>UI</td>\n",
       "      <td>User Preferences</td>\n",
       "      <td>Utils</td>\n",
       "      <td>Data Structure</td>\n",
       "      <td>IO</td>\n",
       "      <td>Network</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>IO</td>\n",
       "      <td>Utils</td>\n",
       "      <td>Throws</td>\n",
       "      <td>Logging</td>\n",
       "      <td>Network</td>\n",
       "      <td>UI</td>\n",
       "      <td>User Preferences</td>\n",
       "      <td>Data Structure</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>Data Structure</td>\n",
       "      <td>Utils</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>Utils</td>\n",
       "      <td>Text Utility</td>\n",
       "      <td>IO</td>\n",
       "      <td>Data Structure</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>Concurrency</td>\n",
       "      <td>Logging</td>\n",
       "      <td>Data Structure</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 487 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "              1             2               3                 4        5    \\\n",
       "0          Throws       Logging              UI  User Preferences    Utils   \n",
       "1              IO         Utils          Throws           Logging  Network   \n",
       "2  Data Structure         Utils             NaN               NaN      NaN   \n",
       "3           Utils  Text Utility              IO    Data Structure      NaN   \n",
       "4     Concurrency       Logging  Data Structure               NaN      NaN   \n",
       "\n",
       "              6                 7               8    9    10   ... 478 479  \\\n",
       "0  Data Structure                IO         Network  NaN  NaN  ... NaN NaN   \n",
       "1              UI  User Preferences  Data Structure  NaN  NaN  ... NaN NaN   \n",
       "2             NaN               NaN             NaN  NaN  NaN  ... NaN NaN   \n",
       "3             NaN               NaN             NaN  NaN  NaN  ... NaN NaN   \n",
       "4             NaN               NaN             NaN  NaN  NaN  ... NaN NaN   \n",
       "\n",
       "  480 481 482 483 484 485 486 487  \n",
       "0 NaN NaN NaN NaN NaN NaN NaN NaN  \n",
       "1 NaN NaN NaN NaN NaN NaN NaN NaN  \n",
       "2 NaN NaN NaN NaN NaN NaN NaN NaN  \n",
       "3 NaN NaN NaN NaN NaN NaN NaN NaN  \n",
       "4 NaN NaN NaN NaN NaN NaN NaN NaN  \n",
       "\n",
       "[5 rows x 487 columns]"
      ]
     },
     "execution_count": 90,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_API = data.loc[:, 3:490]\n",
    "df_API.rename(columns=lambda x: x-2, inplace=True)\n",
    "\n",
    "df_API.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "metadata": {},
   "outputs": [],
   "source": [
    "#df_title_API = pd.concat([df_title,df_API], axis=1) \n",
    "#df_title_API.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "metadata": {},
   "outputs": [],
   "source": [
    "#df_body_API = pd.concat([df_body,df_API], axis=1) \n",
    "#df_body_API.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "metadata": {},
   "outputs": [],
   "source": [
    "#df_title_API_5 = df_title_API[0:5]\n",
    "#df_title_API_5.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PR</th>\n",
       "      <th>title</th>\n",
       "      <th>body</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "      <th>7</th>\n",
       "      <th>...</th>\n",
       "      <th>478</th>\n",
       "      <th>479</th>\n",
       "      <th>480</th>\n",
       "      <th>481</th>\n",
       "      <th>482</th>\n",
       "      <th>483</th>\n",
       "      <th>484</th>\n",
       "      <th>485</th>\n",
       "      <th>486</th>\n",
       "      <th>487</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>New Sorting/Export preferences</td>\n",
       "      <td>This will add a new  File Sorting  Tab to the ...</td>\n",
       "      <td>Throws</td>\n",
       "      <td>Logging</td>\n",
       "      <td>UI</td>\n",
       "      <td>User Preferences</td>\n",
       "      <td>Utils</td>\n",
       "      <td>Data Structure</td>\n",
       "      <td>IO</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>I have implemented 2 features requested in Tic...</td>\n",
       "      <td>The user can now specify an arbitrary number o...</td>\n",
       "      <td>IO</td>\n",
       "      <td>Utils</td>\n",
       "      <td>Throws</td>\n",
       "      <td>Logging</td>\n",
       "      <td>Network</td>\n",
       "      <td>UI</td>\n",
       "      <td>User Preferences</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>10</td>\n",
       "      <td>try to fix some obvious bugs about  groups</td>\n",
       "      <td>Hi All  I just upgraded to 2.10 and I found so...</td>\n",
       "      <td>Data Structure</td>\n",
       "      <td>Utils</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>11</td>\n",
       "      <td>BugFix for bug  #880 PubMed Import broken</td>\n",
       "      <td>Found bug: PubMed/Medline PLAIN format recogni...</td>\n",
       "      <td>Utils</td>\n",
       "      <td>Text Utility</td>\n",
       "      <td>IO</td>\n",
       "      <td>Data Structure</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>15</td>\n",
       "      <td>Make (un)abbreviating journal titles also work...</td>\n",
       "      <td>I ve (i) added the toggle button to the  journ...</td>\n",
       "      <td>Concurrency</td>\n",
       "      <td>Logging</td>\n",
       "      <td>Data Structure</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 490 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   PR                                              title  \\\n",
       "0   1                     New Sorting/Export preferences   \n",
       "1   7  I have implemented 2 features requested in Tic...   \n",
       "2  10         try to fix some obvious bugs about  groups   \n",
       "3  11          BugFix for bug  #880 PubMed Import broken   \n",
       "4  15  Make (un)abbreviating journal titles also work...   \n",
       "\n",
       "                                                body               1  \\\n",
       "0  This will add a new  File Sorting  Tab to the ...          Throws   \n",
       "1  The user can now specify an arbitrary number o...              IO   \n",
       "2  Hi All  I just upgraded to 2.10 and I found so...  Data Structure   \n",
       "3  Found bug: PubMed/Medline PLAIN format recogni...           Utils   \n",
       "4  I ve (i) added the toggle button to the  journ...     Concurrency   \n",
       "\n",
       "              2               3                 4        5               6  \\\n",
       "0       Logging              UI  User Preferences    Utils  Data Structure   \n",
       "1         Utils          Throws           Logging  Network              UI   \n",
       "2         Utils             NaN               NaN      NaN             NaN   \n",
       "3  Text Utility              IO    Data Structure      NaN             NaN   \n",
       "4       Logging  Data Structure               NaN      NaN             NaN   \n",
       "\n",
       "                  7  ... 478 479 480 481 482 483 484 485 486 487  \n",
       "0                IO  ... NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN  \n",
       "1  User Preferences  ... NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN  \n",
       "2               NaN  ... NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN  \n",
       "3               NaN  ... NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN  \n",
       "4               NaN  ... NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN  \n",
       "\n",
       "[5 rows x 490 columns]"
      ]
     },
     "execution_count": 94,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_title_body_API = pd.concat([df_title_body,df_API], axis=1) \n",
    "df_title_body_API.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "metadata": {},
   "outputs": [],
   "source": [
    "#merged_inner = pd.merge(left=df_title_API, right=df_body_API, left_on='PR', right_on='PR')\n",
    "#merged_inner.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PR</th>\n",
       "      <th>title</th>\n",
       "      <th>body</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "      <th>7</th>\n",
       "      <th>...</th>\n",
       "      <th>478</th>\n",
       "      <th>479</th>\n",
       "      <th>480</th>\n",
       "      <th>481</th>\n",
       "      <th>482</th>\n",
       "      <th>483</th>\n",
       "      <th>484</th>\n",
       "      <th>485</th>\n",
       "      <th>486</th>\n",
       "      <th>487</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>New Sorting/Export preferences</td>\n",
       "      <td>This will add a new  File Sorting  Tab to the ...</td>\n",
       "      <td>Throws</td>\n",
       "      <td>Logging</td>\n",
       "      <td>UI</td>\n",
       "      <td>User Preferences</td>\n",
       "      <td>Utils</td>\n",
       "      <td>Data Structure</td>\n",
       "      <td>IO</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>I have implemented 2 features requested in Tic...</td>\n",
       "      <td>The user can now specify an arbitrary number o...</td>\n",
       "      <td>IO</td>\n",
       "      <td>Utils</td>\n",
       "      <td>Throws</td>\n",
       "      <td>Logging</td>\n",
       "      <td>Network</td>\n",
       "      <td>UI</td>\n",
       "      <td>User Preferences</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>10</td>\n",
       "      <td>try to fix some obvious bugs about  groups</td>\n",
       "      <td>Hi All  I just upgraded to 2.10 and I found so...</td>\n",
       "      <td>Data Structure</td>\n",
       "      <td>Utils</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>11</td>\n",
       "      <td>BugFix for bug  #880 PubMed Import broken</td>\n",
       "      <td>Found bug: PubMed/Medline PLAIN format recogni...</td>\n",
       "      <td>Utils</td>\n",
       "      <td>Text Utility</td>\n",
       "      <td>IO</td>\n",
       "      <td>Data Structure</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>15</td>\n",
       "      <td>Make (un)abbreviating journal titles also work...</td>\n",
       "      <td>I ve (i) added the toggle button to the  journ...</td>\n",
       "      <td>Concurrency</td>\n",
       "      <td>Logging</td>\n",
       "      <td>Data Structure</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 490 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   PR                                              title  \\\n",
       "0   1                     New Sorting/Export preferences   \n",
       "1   7  I have implemented 2 features requested in Tic...   \n",
       "2  10         try to fix some obvious bugs about  groups   \n",
       "3  11          BugFix for bug  #880 PubMed Import broken   \n",
       "4  15  Make (un)abbreviating journal titles also work...   \n",
       "\n",
       "                                                body               1  \\\n",
       "0  This will add a new  File Sorting  Tab to the ...          Throws   \n",
       "1  The user can now specify an arbitrary number o...              IO   \n",
       "2  Hi All  I just upgraded to 2.10 and I found so...  Data Structure   \n",
       "3  Found bug: PubMed/Medline PLAIN format recogni...           Utils   \n",
       "4  I ve (i) added the toggle button to the  journ...     Concurrency   \n",
       "\n",
       "              2               3                 4        5               6  \\\n",
       "0       Logging              UI  User Preferences    Utils  Data Structure   \n",
       "1         Utils          Throws           Logging  Network              UI   \n",
       "2         Utils             NaN               NaN      NaN             NaN   \n",
       "3  Text Utility              IO    Data Structure      NaN             NaN   \n",
       "4       Logging  Data Structure               NaN      NaN             NaN   \n",
       "\n",
       "                  7  ... 478 479 480 481 482 483 484 485 486 487  \n",
       "0                IO  ... NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN  \n",
       "1  User Preferences  ... NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN  \n",
       "2               NaN  ... NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN  \n",
       "3               NaN  ... NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN  \n",
       "4               NaN  ... NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN  \n",
       "\n",
       "[5 rows x 490 columns]"
      ]
     },
     "execution_count": 96,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_title_body_API_5 = df_title_body_API[0:5]\n",
    "df_title_body_API_5.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0\n",
      "1\n",
      "2\n",
      "3\n",
      "4\n",
      "5\n",
      "6\n",
      "7\n",
      "8\n",
      "9\n",
      "10\n",
      "11\n",
      "12\n",
      "13\n",
      "14\n",
      "15\n",
      "16\n",
      "17\n",
      "18\n",
      "19\n",
      "20\n",
      "21\n",
      "22\n",
      "23\n",
      "24\n",
      "25\n",
      "26\n",
      "27\n",
      "28\n",
      "29\n",
      "30\n",
      "31\n",
      "32\n",
      "33\n",
      "34\n",
      "35\n",
      "36\n",
      "37\n",
      "38\n",
      "39\n",
      "40\n",
      "41\n",
      "42\n",
      "43\n",
      "44\n",
      "45\n",
      "46\n",
      "47\n",
      "48\n",
      "49\n",
      "50\n",
      "51\n",
      "52\n",
      "53\n",
      "54\n",
      "55\n",
      "56\n",
      "57\n",
      "58\n",
      "59\n",
      "60\n",
      "61\n",
      "62\n",
      "63\n",
      "64\n",
      "65\n",
      "66\n",
      "67\n",
      "68\n",
      "69\n",
      "70\n",
      "71\n",
      "72\n",
      "73\n",
      "74\n",
      "75\n",
      "76\n",
      "77\n",
      "78\n",
      "79\n",
      "80\n",
      "81\n",
      "82\n",
      "83\n",
      "84\n",
      "85\n",
      "86\n",
      "87\n",
      "88\n",
      "89\n",
      "90\n",
      "91\n",
      "92\n",
      "93\n",
      "94\n",
      "95\n",
      "96\n",
      "97\n",
      "98\n",
      "99\n",
      "100\n",
      "101\n",
      "102\n",
      "103\n",
      "104\n",
      "105\n",
      "106\n",
      "107\n",
      "108\n",
      "109\n",
      "110\n",
      "111\n",
      "112\n",
      "113\n",
      "114\n",
      "115\n",
      "116\n",
      "117\n",
      "118\n",
      "119\n",
      "120\n",
      "121\n",
      "122\n",
      "123\n",
      "124\n",
      "125\n",
      "126\n",
      "127\n",
      "128\n",
      "129\n",
      "130\n",
      "131\n",
      "132\n",
      "133\n",
      "134\n",
      "135\n",
      "136\n",
      "137\n",
      "138\n",
      "139\n",
      "140\n",
      "141\n",
      "142\n",
      "143\n",
      "144\n",
      "145\n",
      "146\n",
      "147\n",
      "148\n",
      "149\n",
      "150\n",
      "151\n",
      "152\n",
      "153\n",
      "154\n",
      "155\n",
      "156\n",
      "157\n",
      "158\n",
      "159\n",
      "160\n",
      "161\n",
      "162\n",
      "163\n",
      "164\n",
      "165\n",
      "166\n",
      "167\n",
      "168\n",
      "169\n",
      "170\n",
      "171\n",
      "172\n",
      "173\n",
      "174\n",
      "175\n",
      "176\n",
      "177\n",
      "178\n",
      "179\n",
      "180\n",
      "181\n",
      "182\n",
      "183\n",
      "184\n",
      "185\n",
      "186\n",
      "187\n",
      "188\n",
      "189\n",
      "190\n",
      "191\n",
      "192\n",
      "193\n",
      "194\n",
      "195\n",
      "196\n",
      "197\n",
      "198\n",
      "199\n",
      "200\n",
      "201\n",
      "202\n",
      "203\n",
      "204\n",
      "205\n",
      "206\n",
      "207\n",
      "208\n",
      "209\n",
      "210\n",
      "211\n",
      "212\n",
      "213\n",
      "214\n",
      "215\n",
      "216\n",
      "217\n",
      "218\n",
      "219\n",
      "220\n",
      "221\n",
      "222\n",
      "223\n",
      "224\n",
      "225\n",
      "226\n",
      "227\n",
      "228\n",
      "229\n",
      "230\n",
      "231\n",
      "232\n",
      "233\n",
      "234\n",
      "235\n",
      "236\n",
      "237\n",
      "238\n",
      "239\n",
      "240\n",
      "241\n",
      "242\n",
      "243\n",
      "244\n",
      "245\n",
      "246\n",
      "247\n",
      "248\n",
      "249\n",
      "250\n",
      "251\n",
      "252\n",
      "253\n",
      "254\n",
      "255\n",
      "256\n",
      "257\n",
      "258\n",
      "259\n",
      "260\n",
      "261\n",
      "262\n",
      "263\n",
      "264\n",
      "265\n",
      "266\n",
      "267\n",
      "268\n",
      "269\n",
      "270\n",
      "271\n",
      "272\n",
      "273\n",
      "274\n",
      "275\n",
      "276\n",
      "277\n",
      "278\n",
      "279\n",
      "280\n",
      "281\n",
      "282\n",
      "283\n",
      "284\n",
      "285\n",
      "286\n",
      "287\n",
      "288\n",
      "289\n",
      "290\n",
      "291\n",
      "292\n",
      "293\n",
      "294\n",
      "295\n",
      "296\n",
      "297\n",
      "298\n",
      "299\n",
      "300\n",
      "301\n",
      "302\n",
      "303\n",
      "304\n",
      "305\n",
      "306\n",
      "307\n",
      "308\n",
      "309\n",
      "310\n",
      "311\n",
      "312\n",
      "313\n",
      "314\n",
      "315\n",
      "316\n",
      "317\n",
      "318\n",
      "319\n",
      "320\n",
      "321\n",
      "322\n",
      "323\n",
      "324\n",
      "325\n",
      "326\n",
      "327\n",
      "328\n",
      "329\n",
      "330\n",
      "331\n",
      "332\n",
      "333\n",
      "334\n",
      "335\n",
      "336\n",
      "337\n",
      "338\n",
      "339\n",
      "340\n",
      "341\n",
      "342\n",
      "343\n",
      "344\n",
      "345\n",
      "346\n",
      "347\n",
      "348\n",
      "349\n",
      "350\n",
      "351\n",
      "352\n",
      "353\n",
      "354\n",
      "355\n",
      "356\n",
      "357\n",
      "358\n",
      "359\n",
      "360\n",
      "361\n",
      "362\n",
      "363\n",
      "364\n",
      "365\n",
      "366\n",
      "367\n",
      "368\n",
      "369\n",
      "370\n",
      "371\n",
      "372\n",
      "373\n",
      "374\n",
      "375\n",
      "376\n",
      "377\n",
      "378\n",
      "379\n",
      "380\n",
      "381\n",
      "382\n",
      "383\n",
      "384\n",
      "385\n",
      "386\n",
      "387\n",
      "388\n",
      "389\n",
      "390\n",
      "391\n",
      "392\n",
      "393\n",
      "394\n",
      "395\n",
      "396\n",
      "397\n",
      "398\n",
      "399\n",
      "400\n",
      "401\n",
      "402\n",
      "403\n",
      "404\n",
      "405\n",
      "406\n",
      "407\n",
      "408\n",
      "409\n",
      "410\n",
      "411\n",
      "412\n",
      "413\n",
      "414\n",
      "415\n",
      "416\n",
      "417\n",
      "418\n",
      "419\n",
      "420\n",
      "421\n",
      "422\n",
      "423\n",
      "424\n",
      "425\n",
      "426\n",
      "427\n",
      "428\n",
      "429\n",
      "430\n",
      "431\n",
      "432\n",
      "433\n",
      "434\n",
      "435\n",
      "436\n",
      "437\n",
      "438\n",
      "439\n",
      "440\n",
      "441\n",
      "442\n",
      "443\n",
      "444\n",
      "445\n",
      "446\n",
      "447\n",
      "448\n",
      "449\n",
      "450\n",
      "451\n",
      "452\n",
      "453\n",
      "454\n",
      "455\n",
      "456\n",
      "457\n",
      "458\n",
      "459\n",
      "460\n",
      "461\n",
      "462\n",
      "463\n",
      "464\n",
      "465\n",
      "466\n",
      "467\n",
      "468\n",
      "469\n",
      "470\n",
      "471\n",
      "472\n",
      "473\n",
      "474\n",
      "475\n",
      "476\n",
      "477\n",
      "478\n",
      "479\n",
      "480\n",
      "481\n",
      "482\n",
      "483\n",
      "484\n",
      "485\n",
      "486\n",
      "487\n",
      "488\n",
      "489\n"
     ]
    }
   ],
   "source": [
    "#import pandas as pd\n",
    "#prs = pd.read_csv(\"/Users/fd252/Documents/Cursos3/NAU/Research2/Python/Data/aprioriBodyTitle.csv\")\n",
    "\n",
    "\n",
    "\n",
    "#for name in prs:\n",
    "#    print(name)\n",
    "    \n",
    "#serie_line = prs.str.split(\",\")\n",
    "#type(serie_line) \n",
    "# Todas as colunas\n",
    "all_columns = list(data.columns)\n",
    "#print(all_columns)\n",
    "selected_columns = []\n",
    "my_words = []\n",
    "\n",
    "# Percorrendo as colunas\n",
    "for c in all_columns:\n",
    "    print(c)\n",
    "#   adiciona na lista selected_columns as colunas que comeÃ§am com \"occupation_\" ou \"State_\"\n",
    "    #if c.startswith(\"ocuppation_\") or c.startswith(\"State_\"):\n",
    "    if c == 1:\n",
    "        selected_columns.append(c)\n",
    "    if c == 2:\n",
    "        selected_columns.append(c)\n",
    "    if c > 2:\n",
    "        if c != 'NaN':\n",
    "            my_words.append(c)\n",
    "        \n",
    "        \n",
    "# Compomos as colunas que serÃ£o selecionadas com as colunas quem\n",
    "# comeÃ§am com \"occupation_\" ou \"State_\" e as outras colunas referentes ao usuÃ¡rio\n",
    "#user_columns = [\"user_id\",\"sex_M\", \"sex_F\", \"age\"] + selected_columns\n",
    "\n",
    "# Seleciona do dataframe original apenas as colunas de usuÃ¡rio\n",
    "#df_user = movies[user_columns]\n",
    "#df_user.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Input the file  \n",
    "#txt = [] \n",
    "#with open('/Users/fd252/Documents/Cursos3/NAU/Research2/Python/Data/aprioriBodyTitle.csv') as file: \n",
    "#    txt = file.readlines() \n",
    "    \n",
    "#for i, line in enumerate(txt):   \n",
    "#    print(i)\n",
    "#    print(line)\n",
    "#    serie_line = txt.str.split(\",\")\n",
    "#type(serie_line)    \n",
    "    \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "metadata": {},
   "outputs": [],
   "source": [
    "import nltk \n",
    "\n",
    "\n",
    "import re \n",
    "from sklearn.feature_extraction.text import CountVectorizer, TfidfVectorizer \n",
    "from nltk.corpus import stopwords \n",
    "from nltk.tokenize import word_tokenize \n",
    "import pandas as pd "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['This will add a new \"File Sorting\" Tab to the preferences that allows to exactly specify the sort and export order of entries, rather than the rather limited set of choices that were available to date.\\n', \"After checking the bug '1248 Key bindings not modified', it was Identified que the creation of the hashmap list 'defKeyBinds' that sets the standard keyboard shortcuts, the feature 'Open folder' was not included in the 'defineDefaultKeyBindings ( )' method in 'JabRefPreferences' class .\\n\", \"In the creation of the menu item in the 'JabRefFrame' class for the item 'Open folder', it was not possible to recover the value of the item in the list 'defKeyBinds', occurring error 'NullPointerException' in the 'String makeEscape (String s) 'method in 'JabRefPreferences' class, which shouldnt return the value of 'String' to fill out the menu item.\\n\", \"When the 'User' tried to change and save the list, the error 'NullPointerException' not allow the execution of the procedure.\\n\", \"To solve the bug , was included in the verification of the presence of null in 'keyBinds' list (copy of 'defKeyBinds'), the value 'Not associated' being passed to the 'String' return.\\n\", \"The warning that menu feature is created in the 'JabRefFrame' class without associated keyboard shortcut, was moved to the method mentioned before, as was duplicated.\\n\", ' \\n', 'DBLP seems to send `<pre class=\"verbatim select-on-click\">` now instead of only `<pre>`.\\n', ' \\n']\n",
      "\n",
      "\n",
      "Features : \n",
      " ['1248 key bindings', 'add new file', 'after checking bug', 'allow execution procedure', 'allows exactly specify', 'associated keyboard shortcut', 'associated passed string', 'bindings modified identified', 'bug 1248 key', 'bug included verification', 'change save list', 'checking bug 1248', 'choices available date', 'class item open', 'class shouldnt return', 'class verbatim select', 'class without associated', 'click instead pre', 'copy defkeybinds value', 'created jabrefframe class', 'creation hashmap list', 'creation menu item', 'dblp seems send', 'definedefaultkeybindings method jabrefpreferences', 'defkeybinds occurring error', 'defkeybinds sets standard', 'defkeybinds value not', 'entries rather rather', 'error nullpointerexception allow', 'error nullpointerexception string', 'exactly specify sort', 'export order entries', 'feature created jabrefframe', 'feature open folder', 'file sorting tab', 'fill menu item', 'folder included definedefaultkeybindings', 'folder possible recover', 'hashmap list defkeybinds', 'identified que creation', 'in creation menu', 'included definedefaultkeybindings method', 'included verification presence', 'item jabrefframe class', 'item list defkeybinds', 'item open folder', 'jabrefframe class item', 'jabrefframe class without', 'jabrefpreferences class shouldnt', 'key bindings modified', 'keybinds list copy', 'keyboard shortcut moved', 'keyboard shortcuts feature', 'limited set choices', 'list copy defkeybinds', 'list defkeybinds occurring', 'list defkeybinds sets', 'list error nullpointerexception', 'makeescape string method', 'menu feature created', 'menu item jabrefframe', 'method jabrefpreferences class', 'method mentioned duplicated', 'modified identified que', 'moved method mentioned', 'new file sorting', 'not associated passed', 'null keybinds list', 'nullpointerexception allow execution', 'nullpointerexception string makeescape', 'occurring error nullpointerexception', 'on click instead', 'open folder included', 'open folder possible', 'order entries rather', 'passed string return', 'possible recover value', 'pre class verbatim', 'preferences allows exactly', 'presence null keybinds', 'que creation hashmap', 'rather limited set', 'rather rather limited', 'recover value item', 'return value string', 'save list error', 'seems send pre', 'select on click', 'send pre class', 'set choices available', 'sets standard keyboard', 'shortcut moved method', 'shortcuts feature open', 'shouldnt return value', 'solve bug included', 'sort export order', 'sorting tab preferences', 'specify sort export', 'standard keyboard shortcuts', 'string fill menu', 'string makeescape string', 'string method jabrefpreferences', 'tab preferences allows', 'the warning menu', 'this add new', 'to solve bug', 'tried change save', 'user tried change', 'value item list', 'value not associated', 'value string fill', 'verbatim select on', 'verification presence null', 'warning menu feature', 'when user tried', 'without associated keyboard']\n",
      "\n",
      "\n",
      "X1 : \n",
      " [[0 1 0 ... 0 0 0]\n",
      " [1 0 1 ... 0 0 0]\n",
      " [0 0 0 ... 0 0 0]\n",
      " ...\n",
      " [0 0 0 ... 0 0 0]\n",
      " [0 0 0 ... 0 0 0]\n",
      " [0 0 0 ... 0 0 0]]\n",
      "\n",
      "\n",
      "Scores : \n",
      " [[0.         0.22941573 0.         ... 0.         0.         0.        ]\n",
      " [0.20982593 0.         0.20982593 ... 0.         0.         0.        ]\n",
      " [0.         0.         0.         ... 0.         0.         0.        ]\n",
      " ...\n",
      " [0.         0.         0.         ... 0.         0.         0.        ]\n",
      " [0.         0.         0.         ... 0.         0.         0.        ]\n",
      " [0.         0.         0.         ... 0.         0.         0.        ]]\n",
      "\n",
      "\n",
      "Words head : \n",
      "                                term      rank\n",
      "61   method jabrefpreferences class  0.334844\n",
      "22                  dblp seems send  0.333333\n",
      "106               tried change save  0.333333\n",
      "77               pre class verbatim  0.333333\n",
      "71                 on click instead  0.333333\n",
      "17                click instead pre  0.333333\n",
      "15            class verbatim select  0.333333\n"
     ]
    }
   ],
   "source": [
    "# Importing libraries \n",
    "import nltk \n",
    "\n",
    "\n",
    "import re \n",
    "from sklearn.feature_extraction.text import CountVectorizer, TfidfVectorizer \n",
    "from nltk.corpus import stopwords \n",
    "from nltk.tokenize import word_tokenize \n",
    "import pandas as pd \n",
    "  \n",
    "# Input the file  \n",
    "txt1 = [] \n",
    "\n",
    "with open('/Users/fd252/Documents/Cursos3/NAU/Research2/Python/Data/MachineLearning1.txt') as file: \n",
    "    txt1 = file.readlines() \n",
    "type(txt1)\n",
    "print(txt1) \n",
    "# Preprocessing \n",
    "def remove_string_special_characters(s): \n",
    "      \n",
    "    # removes special characters with ' ' \n",
    "    stripped = re.sub('[^a-zA-z\\s]', '', s) \n",
    "    stripped = re.sub('_', '', stripped) \n",
    "      \n",
    "    # Change any white space to one space \n",
    "    stripped = re.sub('\\s+', ' ', stripped) \n",
    "      \n",
    "    # Remove start and end white spaces \n",
    "    stripped = stripped.strip() \n",
    "    if stripped != '': \n",
    "            return stripped.lower() \n",
    "          \n",
    "# Stopword removal  \n",
    "stop_words = set(stopwords.words('english')) \n",
    "your_list = ['Database', 'UI', 'Utils', 'IO'] \n",
    "for i, line in enumerate(txt1): \n",
    "    txt1[i] = ' '.join([x for \n",
    "        x in nltk.word_tokenize(line) if \n",
    "        ( x not in stop_words ) and ( x not in your_list )]) \n",
    "    type(txt1[i])\n",
    "      \n",
    "# Getting trigrams  \n",
    "vectorizer = CountVectorizer(ngram_range = (3,3)) \n",
    "X1 = vectorizer.fit_transform(txt1)  \n",
    "features = (vectorizer.get_feature_names()) \n",
    "print(\"\\n\\nFeatures : \\n\", features) \n",
    "print(\"\\n\\nX1 : \\n\", X1.toarray()) \n",
    "  \n",
    "# Applying TFIDF \n",
    "vectorizer = TfidfVectorizer(ngram_range = (3,3)) \n",
    "X2 = vectorizer.fit_transform(txt1) \n",
    "scores = (X2.toarray()) \n",
    "print(\"\\n\\nScores : \\n\", scores) \n",
    "  \n",
    "# Getting top ranking features \n",
    "sums = X2.sum(axis = 0) \n",
    "data1 = [] \n",
    "for col, term in enumerate(features): \n",
    "    data1.append( (term, sums[0,col] )) \n",
    "ranking = pd.DataFrame(data1, columns = ['term','rank']) \n",
    "words = (ranking.sort_values('rank', ascending = False)) \n",
    "print (\"\\n\\nWords head : \\n\", words.head(7)) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "str"
      ]
     },
     "execution_count": 101,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(txt1[1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 168,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Importing libraries \n",
    "import nltk \n",
    "\n",
    "\n",
    "import re \n",
    "from sklearn.feature_extraction.text import CountVectorizer, TfidfVectorizer \n",
    "from nltk.corpus import stopwords \n",
    "from nltk.tokenize import word_tokenize \n",
    "import pandas as pd \n",
    "  \n",
    "# Input the file  \n",
    "#txt1 = [] \n",
    "#with open('/Users/fd252/Documents/Cursos3/NAU/Research2/Python/Data/MachineLearning1.txt') as file: \n",
    "#    txt1 = file.readlines() \n",
    "    \n",
    "\n",
    "        \n",
    "# Preprocessing \n",
    "def remove_string_special_characters(s): \n",
    "      \n",
    "    # removes special characters with ' ' \n",
    "    stripped = re.sub('[^a-zA-z\\s]', '', s) \n",
    "    stripped = re.sub('_', '', stripped) \n",
    "      \n",
    "    # Change any white space to one space \n",
    "    stripped = re.sub('\\s+', ' ', stripped) \n",
    "      \n",
    "    # Remove start and end white spaces \n",
    "    stripped = stripped.strip() \n",
    "    if stripped != '': \n",
    "            return stripped.lower() \n",
    "        \n",
    "    \n",
    "def run_metrics(lines):\n",
    "    \n",
    "    my_list = []\n",
    "    #title = \"\"\n",
    "    for j, v in lines.items(): \n",
    "        #print (j, v)\n",
    "        if j == 'PR':\n",
    "            pr = v\n",
    "            #print (pr)\n",
    "        else:\n",
    "                if j == \"title\":\n",
    "                    title = v\n",
    "                    print(title)\n",
    "                else:\n",
    "                    if v is not None:\n",
    "                        if type(v) == str:\n",
    "                            if pd.isna(v):\n",
    "                                pass\n",
    "                            else:\n",
    "                                my_list.append(v)\n",
    "                                \n",
    "    calc_metrics(pr,title,my_list)\n",
    "\n",
    "def calc_metrics(pr1, txt1, your_list):\n",
    "    # Stopword removal  \n",
    "    stop_words = set(stopwords.words('english')) \n",
    "    #your_list = ['Database', 'UI', 'Utils', 'IO'] \n",
    "    \n",
    "    for i, line in enumerate(txt1): \n",
    "        txt1[i] = ' '.join([x for \n",
    "            x in nltk.word_tokenize(line) if \n",
    "            ( x not in stop_words ) and ( x not in your_list )]) \n",
    "\n",
    "    # Getting trigrams  \n",
    "    vectorizer = CountVectorizer(ngram_range = (3,3)) \n",
    "    X1 = vectorizer.fit_transform(txt1)  \n",
    "    features = (vectorizer.get_feature_names()) \n",
    "    print(\"\\n\\nFeatures : \\n\", features) \n",
    "    print(\"\\n\\nX1 : \\n\", X1.toarray()) \n",
    "\n",
    "    # Applying TFIDF \n",
    "    vectorizer = TfidfVectorizer(ngram_range = (3,3)) \n",
    "    X2 = vectorizer.fit_transform(txt1) \n",
    "    scores = (X2.toarray()) \n",
    "    print(\"\\n PR: \", pr1)\n",
    "    print(\"\\n ---------------------: \", pr1)\n",
    "    \n",
    "    print(\"\\n\\nScores : \\n\", scores) \n",
    "\n",
    "    # Getting top ranking features \n",
    "    sums = X2.sum(axis = 0) \n",
    "    data1 = [] \n",
    "    for col, term in enumerate(features): \n",
    "        data1.append( (term, sums[0,col] )) \n",
    "    ranking = pd.DataFrame(data1, columns = ['term','rank']) \n",
    "    words = (ranking.sort_values('rank', ascending = False)) \n",
    "    print(\"\\n PR: \", pr1)\n",
    "    print(\"\\n ---------------------: \", pr1)\n",
    "\n",
    "    print (\"\\n\\nWords head : \\n\", words.head(7))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 185,
   "metadata": {},
   "outputs": [],
   "source": [
    "file_lines = []\n",
    "test_file = []\n",
    "data2 = []\n",
    "\n",
    "# Preprocessing \n",
    "def remove_string_special_characters(s): \n",
    "      \n",
    "    # removes special characters with ' ' \n",
    "    stripped = re.sub('[^a-zA-z\\s]', '', s) \n",
    "    stripped = re.sub('_', '', stripped) \n",
    "      \n",
    "    # Change any white space to one space \n",
    "    stripped = re.sub('\\s+', ' ', stripped) \n",
    "      \n",
    "    # Remove start and end white spaces \n",
    "    stripped = stripped.strip() \n",
    "    if stripped != '': \n",
    "            return stripped.lower() \n",
    "\n",
    "def run_metrics1(lines):\n",
    "    title = []\n",
    "    body = [] \n",
    "    my_list = []\n",
    "    pr = [] \n",
    "    #title = \"\"\n",
    "    for j, v in lines.items(): \n",
    "        #print (j, v)\n",
    "        if j == 'PR':\n",
    "            pr = v\n",
    "            #print (pr)\n",
    "        else:\n",
    "            if j == \"title\":\n",
    "                #st = remove_string_special_characters(v)\n",
    "                #title.append(st)\n",
    "                title.append(v)\n",
    "                #print(title)\n",
    "            else:\n",
    "                if j == \"body\":\n",
    "                    #sb = remove_string_special_characters(v)\n",
    "                    #body.append(sb)\n",
    "                    body.append(v)\n",
    "                    #print(body)\n",
    "                #else:\n",
    "                 #   if v is not None:\n",
    "                  #      if type(v) == str:\n",
    "                   #         if pd.isna(v):\n",
    "                    #            pass\n",
    "                     #       else:\n",
    "                      #          my_list.append(v)\n",
    "        \n",
    "    #calc_metrics(pr, title, my_list, '/Users/fd252/Documents/Cursos3/NAU/Research2/Python/Data/Title3GramTFIDF.txt')\n",
    "    #print(type(body))\n",
    "    \n",
    "    calc_metrics(pr, body, my_list, '/Users/fd252/Documents/Cursos3/NAU/Research2/Python/Data/Body3GramTFIDF.txt')\n",
    "\n",
    "    #txt1 = title\n",
    "    #print(\"\\n: \",body)\n",
    "    \n",
    "            \n",
    "def calc_metrics(pr1, txt1, your_list, file):\n",
    "    #print(pr1, txt, your_list)\n",
    "    # Stopword removal \n",
    "    \n",
    "    stop_words = set(stopwords.words('english')) \n",
    "    #your_list = ['Database', 'UI', 'Utils', 'IO'] \n",
    "\n",
    "    for i, line in enumerate(txt1): \n",
    "        txt1[i] = ' '.join([x for \n",
    "            x in nltk.word_tokenize(line) if \n",
    "            ( x not in stop_words ) and ( x not in your_list )]) \n",
    "\n",
    "    # Getting n grams  \n",
    "    vectorizer = CountVectorizer(ngram_range = (1,4)) \n",
    "    X1 = vectorizer.fit_transform(txt1)  \n",
    "    features = (vectorizer.get_feature_names()) \n",
    "    \n",
    "    \n",
    "    print(\"\\n n grams PR: \", pr1)\n",
    "    print(\"\\n --------------------- PR: \", pr1)\n",
    "    print(\"\\n Text to be analyzed: \", txt1)\n",
    "    print(\"\\n\\nFeatures : \\n\", features) \n",
    "    print(\"\\n\\nX1 : \\n\", X1.toarray()) \n",
    "    \n",
    "    \n",
    "    data = \" ------------------- Processing : \", txt1\n",
    "    file_lines.append(data)\n",
    "    data = \"n grams PR: \", pr1\n",
    "    file_lines.append(data)\n",
    "    data = \"Features : \", features \n",
    "    file_lines.append(data)\n",
    "    data =  \"X1 : \", X1.toarray()\n",
    "    file_lines.append(data)\n",
    "    \n",
    "    \n",
    "    # Applying TFIDF \n",
    "    vectorizer = TfidfVectorizer(ngram_range = (1,4)) \n",
    "    X2 = vectorizer.fit_transform(txt1) \n",
    "    scores = (X2.toarray()) \n",
    "    \n",
    "    print(\"\\n TFIDF PR: \", pr1)\n",
    "    print(\"\\n --------------------- PR: \", pr1)\n",
    "    #print(\"\\n:\", txt1)\n",
    "    \n",
    "    print(\"\\n\\nScores : \\n\", scores) \n",
    "\n",
    "    data = \"TFIDF PR: \", pr1\n",
    "    file_lines.append(data)\n",
    "    data = \"Scores : \", scores\n",
    "    file_lines.append(data)\n",
    "    \n",
    "    # Getting top ranking features \n",
    "    sums = X2.sum(axis = 0) \n",
    "    data1 = [] \n",
    "    for col, term in enumerate(features): \n",
    "        data1.append( (pr1, term, sums[0,col] )) \n",
    "    ranking = pd.DataFrame(data1, columns = ['pr','term','rank']) \n",
    "    words = (ranking.sort_values('rank', ascending = False)) \n",
    "    \n",
    "    test_data = str(pr1)\n",
    "    for index, row in words.iterrows():\n",
    "\n",
    "        count = 0\n",
    "        for k, v in row.items():\n",
    "            count = count +1\n",
    "            if count<20:\n",
    "                if k == 'pr':\n",
    "                #pr = v,\",\"\n",
    "                #test_file.append(pr)\n",
    "                #print (pr)\n",
    "                    pass\n",
    "                else:\n",
    "                    if k == 'term':\n",
    "                        pass\n",
    "                    else:\n",
    "                        value = v\n",
    "                        print ( \"value: \", value)\n",
    "                        test_data += \",\"\n",
    "                        test_data += str(value)\n",
    "    \n",
    "    #ln_test = words.apply(create_test, axis=1)\n",
    "    #print(\"return:\",ln_test)\n",
    "    \n",
    "    #data2.append((pr1,ln_test)) \n",
    "    data2.append(test_data)\n",
    "    \n",
    "    print(\"\\n top ranking features PR: \", pr1)\n",
    "    print(\"\\n --------------------- PR: \", pr1)\n",
    "    #print(\"\\n:\", txt1)\n",
    "\n",
    "    print (\"\\n\\nWords head : \\n\", words.head(7))\n",
    "    \n",
    "    data = \"top ranking features PR: \", pr1\n",
    "    file_lines.append(data)\n",
    "    data = \"Words head : \", words.head(7)\n",
    "    \n",
    "    file_lines.append(data)\n",
    "    \n",
    "    df_file = pd.DataFrame(file_lines)\n",
    "    np.savetxt(file, df_file.values, fmt='%s', delimiter=' ')\n",
    "    test_csv = pd.DataFrame(data2)   \n",
    "    test_csv.to_csv('/Users/fd252/Documents/Cursos3/NAU/Research2/Python/data/test_file.csv', encoding='utf-8', header=False, index=False, sep=',')    \n",
    "    np.savetxt(r'/Users/fd252/Documents/Cursos3/NAU/Research2/Python/data/test_file.txt', test_csv.values, fmt='%s', delimiter=',')\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 154,
   "metadata": {},
   "outputs": [],
   "source": [
    "#df_title_body_API.apply(run_metrics1, axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 186,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " n grams PR:  1\n",
      "\n",
      " --------------------- PR:  1\n",
      "\n",
      " Text to be analyzed:  ['This add new File Sorting Tab preferences allows exactly specify sort export order entries rather rather limited set choices available date .']\n",
      "\n",
      "\n",
      "Features : \n",
      " ['add', 'add new', 'add new file', 'add new file sorting', 'allows', 'allows exactly', 'allows exactly specify', 'allows exactly specify sort', 'available', 'available date', 'choices', 'choices available', 'choices available date', 'date', 'entries', 'entries rather', 'entries rather rather', 'entries rather rather limited', 'exactly', 'exactly specify', 'exactly specify sort', 'exactly specify sort export', 'export', 'export order', 'export order entries', 'export order entries rather', 'file', 'file sorting', 'file sorting tab', 'file sorting tab preferences', 'limited', 'limited set', 'limited set choices', 'limited set choices available', 'new', 'new file', 'new file sorting', 'new file sorting tab', 'order', 'order entries', 'order entries rather', 'order entries rather rather', 'preferences', 'preferences allows', 'preferences allows exactly', 'preferences allows exactly specify', 'rather', 'rather limited', 'rather limited set', 'rather limited set choices', 'rather rather', 'rather rather limited', 'rather rather limited set', 'set', 'set choices', 'set choices available', 'set choices available date', 'sort', 'sort export', 'sort export order', 'sort export order entries', 'sorting', 'sorting tab', 'sorting tab preferences', 'sorting tab preferences allows', 'specify', 'specify sort', 'specify sort export', 'specify sort export order', 'tab', 'tab preferences', 'tab preferences allows', 'tab preferences allows exactly', 'this', 'this add', 'this add new', 'this add new file']\n",
      "\n",
      "\n",
      "X1 : \n",
      " [[1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n",
      "  1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n",
      "  1 1 1 1 1]]\n",
      "\n",
      " TFIDF PR:  1\n",
      "\n",
      " --------------------- PR:  1\n",
      "\n",
      "\n",
      "Scores : \n",
      " [[0.1118034 0.1118034 0.1118034 0.1118034 0.1118034 0.1118034 0.1118034\n",
      "  0.1118034 0.1118034 0.1118034 0.1118034 0.1118034 0.1118034 0.1118034\n",
      "  0.1118034 0.1118034 0.1118034 0.1118034 0.1118034 0.1118034 0.1118034\n",
      "  0.1118034 0.1118034 0.1118034 0.1118034 0.1118034 0.1118034 0.1118034\n",
      "  0.1118034 0.1118034 0.1118034 0.1118034 0.1118034 0.1118034 0.1118034\n",
      "  0.1118034 0.1118034 0.1118034 0.1118034 0.1118034 0.1118034 0.1118034\n",
      "  0.1118034 0.1118034 0.1118034 0.1118034 0.2236068 0.1118034 0.1118034\n",
      "  0.1118034 0.1118034 0.1118034 0.1118034 0.1118034 0.1118034 0.1118034\n",
      "  0.1118034 0.1118034 0.1118034 0.1118034 0.1118034 0.1118034 0.1118034\n",
      "  0.1118034 0.1118034 0.1118034 0.1118034 0.1118034 0.1118034 0.1118034\n",
      "  0.1118034 0.1118034 0.1118034 0.1118034 0.1118034 0.1118034 0.1118034]]\n",
      "value:  0.22360679774997896\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "value:  0.11180339887498948\n",
      "\n",
      " top ranking features PR:  1\n",
      "\n",
      " --------------------- PR:  1\n",
      "\n",
      "\n",
      "Words head : \n",
      "     pr                        term      rank\n",
      "46   1                      rather  0.223607\n",
      "0    1                         add  0.111803\n",
      "49   1  rather limited set choices  0.111803\n",
      "56   1  set choices available date  0.111803\n",
      "55   1       set choices available  0.111803\n",
      "54   1                 set choices  0.111803\n",
      "53   1                         set  0.111803\n",
      "\n",
      " n grams PR:  7\n",
      "\n",
      " --------------------- PR:  7\n",
      "\n",
      " Text to be analyzed:  ['The user specify arbitrary number file-link columns te Entry table columns preferences tab added main table . The user file types specified list External File Types . The extra columns work exactly like original file-link column . For file-link column whenever multiple files letter displayed bottom right corner icon . Committer : noravanq On branch master Changes committed : ( use git reset HEAD < file > ... unstage ) modified : src/main/java/net/sf/jabref/GUIGlobals.java modified : src/main/java/net/sf/jabref/JabRefPreferences.java modified : src/main/java/net/sf/jabref/TableColumnsTab.java modified : src/main/java/net/sf/jabref/gui/MainTableFormat.java modified : src/main/java/net/sf/jabref/gui/MainTableSelectionListener.java modified : src/main/java/net/sf/jabref/gui/PreventDraggingJTableHeader.java']\n",
      "\n",
      "\n",
      "Features : \n",
      " ['added', 'added main', 'added main table', 'added main table the', 'arbitrary', 'arbitrary number', 'arbitrary number file', 'arbitrary number file link', 'bottom', 'bottom right', 'bottom right corner', 'bottom right corner icon', 'branch', 'branch master', 'branch master changes', 'branch master changes committed', 'changes', 'changes committed', 'changes committed use', 'changes committed use git', 'column', 'column for', 'column for file', 'column for file link', 'column whenever', 'column whenever multiple', 'column whenever multiple files', 'columns', 'columns preferences', 'columns preferences tab', 'columns preferences tab added', 'columns te', 'columns te entry', 'columns te entry table', 'columns work', 'columns work exactly', 'columns work exactly like', 'committed', 'committed use', 'committed use git', 'committed use git reset', 'committer', 'committer noravanq', 'committer noravanq on', 'committer noravanq on branch', 'corner', 'corner icon', 'corner icon committer', 'corner icon committer noravanq', 'displayed', 'displayed bottom', 'displayed bottom right', 'displayed bottom right corner', 'entry', 'entry table', 'entry table columns', 'entry table columns preferences', 'exactly', 'exactly like', 'exactly like original', 'exactly like original file', 'external', 'external file', 'external file types', 'external file types the', 'extra', 'extra columns', 'extra columns work', 'extra columns work exactly', 'file', 'file link', 'file link column', 'file link column for', 'file link column whenever', 'file link columns', 'file link columns te', 'file types', 'file types specified', 'file types specified list', 'file types the', 'file types the extra', 'file unstage', 'file unstage modified', 'file unstage modified src', 'files', 'files letter', 'files letter displayed', 'files letter displayed bottom', 'for', 'for file', 'for file link', 'for file link column', 'git', 'git reset', 'git reset head', 'git reset head file', 'gui', 'gui maintableformat', 'gui maintableformat java', 'gui maintableformat java modified', 'gui maintableselectionlistener', 'gui maintableselectionlistener java', 'gui maintableselectionlistener java modified', 'gui preventdraggingjtableheader', 'gui preventdraggingjtableheader java', 'guiglobals', 'guiglobals java', 'guiglobals java modified', 'guiglobals java modified src', 'head', 'head file', 'head file unstage', 'head file unstage modified', 'icon', 'icon committer', 'icon committer noravanq', 'icon committer noravanq on', 'jabref', 'jabref gui', 'jabref gui maintableformat', 'jabref gui maintableformat java', 'jabref gui maintableselectionlistener', 'jabref gui maintableselectionlistener java', 'jabref gui preventdraggingjtableheader', 'jabref gui preventdraggingjtableheader java', 'jabref guiglobals', 'jabref guiglobals java', 'jabref guiglobals java modified', 'jabref jabrefpreferences', 'jabref jabrefpreferences java', 'jabref jabrefpreferences java modified', 'jabref tablecolumnstab', 'jabref tablecolumnstab java', 'jabref tablecolumnstab java modified', 'jabrefpreferences', 'jabrefpreferences java', 'jabrefpreferences java modified', 'jabrefpreferences java modified src', 'java', 'java modified', 'java modified src', 'java modified src main', 'java net', 'java net sf', 'java net sf jabref', 'letter', 'letter displayed', 'letter displayed bottom', 'letter displayed bottom right', 'like', 'like original', 'like original file', 'like original file link', 'link', 'link column', 'link column for', 'link column for file', 'link column whenever', 'link column whenever multiple', 'link columns', 'link columns te', 'link columns te entry', 'list', 'list external', 'list external file', 'list external file types', 'main', 'main java', 'main java net', 'main java net sf', 'main table', 'main table the', 'main table the user', 'maintableformat', 'maintableformat java', 'maintableformat java modified', 'maintableformat java modified src', 'maintableselectionlistener', 'maintableselectionlistener java', 'maintableselectionlistener java modified', 'maintableselectionlistener java modified src', 'master', 'master changes', 'master changes committed', 'master changes committed use', 'modified', 'modified src', 'modified src main', 'modified src main java', 'multiple', 'multiple files', 'multiple files letter', 'multiple files letter displayed', 'net', 'net sf', 'net sf jabref', 'net sf jabref gui', 'net sf jabref guiglobals', 'net sf jabref jabrefpreferences', 'net sf jabref tablecolumnstab', 'noravanq', 'noravanq on', 'noravanq on branch', 'noravanq on branch master', 'number', 'number file', 'number file link', 'number file link columns', 'on', 'on branch', 'on branch master', 'on branch master changes', 'original', 'original file', 'original file link', 'original file link column', 'preferences', 'preferences tab', 'preferences tab added', 'preferences tab added main', 'preventdraggingjtableheader', 'preventdraggingjtableheader java', 'reset', 'reset head', 'reset head file', 'reset head file unstage', 'right', 'right corner', 'right corner icon', 'right corner icon committer', 'sf', 'sf jabref', 'sf jabref gui', 'sf jabref gui maintableformat', 'sf jabref gui maintableselectionlistener', 'sf jabref gui preventdraggingjtableheader', 'sf jabref guiglobals', 'sf jabref guiglobals java', 'sf jabref jabrefpreferences', 'sf jabref jabrefpreferences java', 'sf jabref tablecolumnstab', 'sf jabref tablecolumnstab java', 'specified', 'specified list', 'specified list external', 'specified list external file', 'specify', 'specify arbitrary', 'specify arbitrary number', 'specify arbitrary number file', 'src', 'src main', 'src main java', 'src main java net', 'tab', 'tab added', 'tab added main', 'tab added main table', 'table', 'table columns', 'table columns preferences', 'table columns preferences tab', 'table the', 'table the user', 'table the user file', 'tablecolumnstab', 'tablecolumnstab java', 'tablecolumnstab java modified', 'tablecolumnstab java modified src', 'te', 'te entry', 'te entry table', 'te entry table columns', 'the', 'the extra', 'the extra columns', 'the extra columns work', 'the user', 'the user file', 'the user file types', 'the user specify', 'the user specify arbitrary', 'types', 'types specified', 'types specified list', 'types specified list external', 'types the', 'types the extra', 'types the extra columns', 'unstage', 'unstage modified', 'unstage modified src', 'unstage modified src main', 'use', 'use git', 'use git reset', 'use git reset head', 'user', 'user file', 'user file types', 'user file types specified', 'user specify', 'user specify arbitrary', 'user specify arbitrary number', 'whenever', 'whenever multiple', 'whenever multiple files', 'whenever multiple files letter', 'work', 'work exactly', 'work exactly like', 'work exactly like original']\n",
      "\n",
      "\n",
      "X1 : \n",
      " [[ 1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  2  1  1  1\n",
      "   1  1  1  3  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1\n",
      "   1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  6  3  2\n",
      "   1  1  1  1  2  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1\n",
      "   3  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  6  3  1\n",
      "   1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1 12  5  5  5  6  6\n",
      "   6  1  1  1  1  1  1  1  1  3  2  1  1  1  1  1  1  1  1  1  1  1  7  6\n",
      "   6  6  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  6  6  6  6  1  1  1\n",
      "   1  6  6  6  3  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1\n",
      "   1  1  1  1  1  1  1  1  1  1  1  1  1  1  6  6  3  1  1  1  1  1  1  1\n",
      "   1  1  1  1  1  1  1  1  1  1  6  6  6  6  1  1  1  1  2  1  1  1  1  1\n",
      "   1  1  1  1  1  1  1  1  1  3  1  1  1  2  1  1  1  1  2  1  1  1  1  1\n",
      "   1  1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1  1  1  1  1  1  1  1]]\n",
      "\n",
      " TFIDF PR:  7\n",
      "\n",
      " --------------------- PR:  7\n",
      "\n",
      "\n",
      "Scores : \n",
      " [[0.02674523 0.02674523 0.02674523 0.02674523 0.02674523 0.02674523\n",
      "  0.02674523 0.02674523 0.02674523 0.02674523 0.02674523 0.02674523\n",
      "  0.02674523 0.02674523 0.02674523 0.02674523 0.02674523 0.02674523\n",
      "  0.02674523 0.02674523 0.05349047 0.02674523 0.02674523 0.02674523\n",
      "  0.02674523 0.02674523 0.02674523 0.0802357  0.02674523 0.02674523\n",
      "  0.02674523 0.02674523 0.02674523 0.02674523 0.02674523 0.02674523\n",
      "  0.02674523 0.02674523 0.02674523 0.02674523 0.02674523 0.02674523\n",
      "  0.02674523 0.02674523 0.02674523 0.02674523 0.02674523 0.02674523\n",
      "  0.02674523 0.02674523 0.02674523 0.02674523 0.02674523 0.02674523\n",
      "  0.02674523 0.02674523 0.02674523 0.02674523 0.02674523 0.02674523\n",
      "  0.02674523 0.02674523 0.02674523 0.02674523 0.02674523 0.02674523\n",
      "  0.02674523 0.02674523 0.02674523 0.16047141 0.0802357  0.05349047\n",
      "  0.02674523 0.02674523 0.02674523 0.02674523 0.05349047 0.02674523\n",
      "  0.02674523 0.02674523 0.02674523 0.02674523 0.02674523 0.02674523\n",
      "  0.02674523 0.02674523 0.02674523 0.02674523 0.02674523 0.02674523\n",
      "  0.02674523 0.02674523 0.02674523 0.02674523 0.02674523 0.02674523\n",
      "  0.0802357  0.02674523 0.02674523 0.02674523 0.02674523 0.02674523\n",
      "  0.02674523 0.02674523 0.02674523 0.02674523 0.02674523 0.02674523\n",
      "  0.02674523 0.02674523 0.02674523 0.02674523 0.02674523 0.02674523\n",
      "  0.02674523 0.02674523 0.02674523 0.16047141 0.0802357  0.02674523\n",
      "  0.02674523 0.02674523 0.02674523 0.02674523 0.02674523 0.02674523\n",
      "  0.02674523 0.02674523 0.02674523 0.02674523 0.02674523 0.02674523\n",
      "  0.02674523 0.02674523 0.02674523 0.02674523 0.02674523 0.02674523\n",
      "  0.32094282 0.13372617 0.13372617 0.13372617 0.16047141 0.16047141\n",
      "  0.16047141 0.02674523 0.02674523 0.02674523 0.02674523 0.02674523\n",
      "  0.02674523 0.02674523 0.02674523 0.0802357  0.05349047 0.02674523\n",
      "  0.02674523 0.02674523 0.02674523 0.02674523 0.02674523 0.02674523\n",
      "  0.02674523 0.02674523 0.02674523 0.02674523 0.18721664 0.16047141\n",
      "  0.16047141 0.16047141 0.02674523 0.02674523 0.02674523 0.02674523\n",
      "  0.02674523 0.02674523 0.02674523 0.02674523 0.02674523 0.02674523\n",
      "  0.02674523 0.02674523 0.02674523 0.02674523 0.02674523 0.16047141\n",
      "  0.16047141 0.16047141 0.16047141 0.02674523 0.02674523 0.02674523\n",
      "  0.02674523 0.16047141 0.16047141 0.16047141 0.0802357  0.02674523\n",
      "  0.02674523 0.02674523 0.02674523 0.02674523 0.02674523 0.02674523\n",
      "  0.02674523 0.02674523 0.02674523 0.02674523 0.02674523 0.02674523\n",
      "  0.02674523 0.02674523 0.02674523 0.02674523 0.02674523 0.02674523\n",
      "  0.02674523 0.02674523 0.02674523 0.02674523 0.02674523 0.02674523\n",
      "  0.02674523 0.02674523 0.02674523 0.02674523 0.02674523 0.02674523\n",
      "  0.02674523 0.02674523 0.16047141 0.16047141 0.0802357  0.02674523\n",
      "  0.02674523 0.02674523 0.02674523 0.02674523 0.02674523 0.02674523\n",
      "  0.02674523 0.02674523 0.02674523 0.02674523 0.02674523 0.02674523\n",
      "  0.02674523 0.02674523 0.02674523 0.02674523 0.16047141 0.16047141\n",
      "  0.16047141 0.16047141 0.02674523 0.02674523 0.02674523 0.02674523\n",
      "  0.05349047 0.02674523 0.02674523 0.02674523 0.02674523 0.02674523\n",
      "  0.02674523 0.02674523 0.02674523 0.02674523 0.02674523 0.02674523\n",
      "  0.02674523 0.02674523 0.02674523 0.0802357  0.02674523 0.02674523\n",
      "  0.02674523 0.05349047 0.02674523 0.02674523 0.02674523 0.02674523\n",
      "  0.05349047 0.02674523 0.02674523 0.02674523 0.02674523 0.02674523\n",
      "  0.02674523 0.02674523 0.02674523 0.02674523 0.02674523 0.02674523\n",
      "  0.02674523 0.02674523 0.02674523 0.05349047 0.02674523 0.02674523\n",
      "  0.02674523 0.02674523 0.02674523 0.02674523 0.02674523 0.02674523\n",
      "  0.02674523 0.02674523 0.02674523 0.02674523 0.02674523 0.02674523]]\n",
      "value:  0.32094281709596423\n",
      "value:  0.18721664330597915\n",
      "value:  0.16047140854798211\n",
      "value:  0.16047140854798211\n",
      "value:  0.16047140854798211\n",
      "value:  0.16047140854798211\n",
      "value:  0.16047140854798211\n",
      "value:  0.16047140854798211\n",
      "value:  0.16047140854798211\n",
      "value:  0.16047140854798211\n",
      "value:  0.16047140854798211\n",
      "value:  0.16047140854798211\n",
      "value:  0.16047140854798211\n",
      "value:  0.16047140854798211\n",
      "value:  0.16047140854798211\n",
      "value:  0.16047140854798211\n",
      "value:  0.16047140854798211\n",
      "value:  0.16047140854798211\n",
      "value:  0.16047140854798211\n",
      "value:  0.16047140854798211\n",
      "value:  0.16047140854798211\n",
      "value:  0.16047140854798211\n",
      "value:  0.16047140854798211\n",
      "value:  0.1337261737899851\n",
      "value:  0.1337261737899851\n",
      "value:  0.1337261737899851\n",
      "value:  0.08023570427399106\n",
      "value:  0.08023570427399106\n",
      "value:  0.08023570427399106\n",
      "value:  0.08023570427399106\n",
      "value:  0.08023570427399106\n",
      "value:  0.08023570427399106\n",
      "value:  0.08023570427399106\n",
      "value:  0.08023570427399106\n",
      "value:  0.05349046951599404\n",
      "value:  0.05349046951599404\n",
      "value:  0.05349046951599404\n",
      "value:  0.05349046951599404\n",
      "value:  0.05349046951599404\n",
      "value:  0.05349046951599404\n",
      "value:  0.05349046951599404\n",
      "value:  0.05349046951599404\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "value:  0.02674523475799702\n",
      "\n",
      " top ranking features PR:  7\n",
      "\n",
      " --------------------- PR:  7\n",
      "\n",
      "\n",
      "Words head : \n",
      "      pr               term      rank\n",
      "138   7               java  0.320943\n",
      "166   7               main  0.187217\n",
      "194   7             net sf  0.160471\n",
      "142   7           java net  0.160471\n",
      "185   7           modified  0.160471\n",
      "186   7       modified src  0.160471\n",
      "187   7  modified src main  0.160471\n",
      "\n",
      " n grams PR:  10\n",
      "\n",
      " --------------------- PR:  10\n",
      "\n",
      " Text to be analyzed:  ['Hi All I upgraded 2.10 I found bugs immediately . 1. right-click-menu move-to-group 2 remove group instead . 2 . I like new add/remove/move panel scrolling working big problem . Because I lots groups even fit full screen height expansion . 3. way expand collapse nodes I tried dev version problems still exist . Here fixation . Cheers W.L .']\n",
      "\n",
      "\n",
      "Features : \n",
      " ['10', '10 found', '10 found bugs', '10 found bugs immediately', 'add', 'add remove', 'add remove move', 'add remove move panel', 'all', 'all upgraded', 'all upgraded 10', 'all upgraded 10 found', 'because', 'because lots', 'because lots groups', 'because lots groups even', 'big', 'big problem', 'big problem because', 'big problem because lots', 'bugs', 'bugs immediately', 'bugs immediately right', 'bugs immediately right click', 'cheers', 'click', 'click menu', 'click menu move', 'click menu move to', 'collapse', 'collapse nodes', 'collapse nodes tried', 'collapse nodes tried dev', 'dev', 'dev version', 'dev version problems', 'dev version problems still', 'even', 'even fit', 'even fit full', 'even fit full screen', 'exist', 'exist here', 'exist here fixation', 'exist here fixation cheers', 'expand', 'expand collapse', 'expand collapse nodes', 'expand collapse nodes tried', 'expansion', 'expansion way', 'expansion way expand', 'expansion way expand collapse', 'fit', 'fit full', 'fit full screen', 'fit full screen height', 'fixation', 'fixation cheers', 'found', 'found bugs', 'found bugs immediately', 'found bugs immediately right', 'full', 'full screen', 'full screen height', 'full screen height expansion', 'group', 'group instead', 'group instead like', 'group instead like new', 'group remove', 'group remove group', 'group remove group instead', 'groups', 'groups even', 'groups even fit', 'groups even fit full', 'height', 'height expansion', 'height expansion way', 'height expansion way expand', 'here', 'here fixation', 'here fixation cheers', 'hi', 'hi all', 'hi all upgraded', 'hi all upgraded 10', 'immediately', 'immediately right', 'immediately right click', 'immediately right click menu', 'instead', 'instead like', 'instead like new', 'instead like new add', 'like', 'like new', 'like new add', 'like new add remove', 'lots', 'lots groups', 'lots groups even', 'lots groups even fit', 'menu', 'menu move', 'menu move to', 'menu move to group', 'move', 'move panel', 'move panel scrolling', 'move panel scrolling working', 'move to', 'move to group', 'move to group remove', 'new', 'new add', 'new add remove', 'new add remove move', 'nodes', 'nodes tried', 'nodes tried dev', 'nodes tried dev version', 'panel', 'panel scrolling', 'panel scrolling working', 'panel scrolling working big', 'problem', 'problem because', 'problem because lots', 'problem because lots groups', 'problems', 'problems still', 'problems still exist', 'problems still exist here', 'remove', 'remove group', 'remove group instead', 'remove group instead like', 'remove move', 'remove move panel', 'remove move panel scrolling', 'right', 'right click', 'right click menu', 'right click menu move', 'screen', 'screen height', 'screen height expansion', 'screen height expansion way', 'scrolling', 'scrolling working', 'scrolling working big', 'scrolling working big problem', 'still', 'still exist', 'still exist here', 'still exist here fixation', 'to', 'to group', 'to group remove', 'to group remove group', 'tried', 'tried dev', 'tried dev version', 'tried dev version problems', 'upgraded', 'upgraded 10', 'upgraded 10 found', 'upgraded 10 found bugs', 'version', 'version problems', 'version problems still', 'version problems still exist', 'way', 'way expand', 'way expand collapse', 'way expand collapse nodes', 'working', 'working big', 'working big problem', 'working big problem because']\n",
      "\n",
      "\n",
      "X1 : \n",
      " [[1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n",
      "  1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1\n",
      "  1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n",
      "  1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1\n",
      "  1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n",
      "  1 1 1]]\n",
      "\n",
      " TFIDF PR:  10\n",
      "\n",
      " --------------------- PR:  10\n",
      "\n",
      "\n",
      "Scores : \n",
      " [[0.07216878 0.07216878 0.07216878 0.07216878 0.07216878 0.07216878\n",
      "  0.07216878 0.07216878 0.07216878 0.07216878 0.07216878 0.07216878\n",
      "  0.07216878 0.07216878 0.07216878 0.07216878 0.07216878 0.07216878\n",
      "  0.07216878 0.07216878 0.07216878 0.07216878 0.07216878 0.07216878\n",
      "  0.07216878 0.07216878 0.07216878 0.07216878 0.07216878 0.07216878\n",
      "  0.07216878 0.07216878 0.07216878 0.07216878 0.07216878 0.07216878\n",
      "  0.07216878 0.07216878 0.07216878 0.07216878 0.07216878 0.07216878\n",
      "  0.07216878 0.07216878 0.07216878 0.07216878 0.07216878 0.07216878\n",
      "  0.07216878 0.07216878 0.07216878 0.07216878 0.07216878 0.07216878\n",
      "  0.07216878 0.07216878 0.07216878 0.07216878 0.07216878 0.07216878\n",
      "  0.07216878 0.07216878 0.07216878 0.07216878 0.07216878 0.07216878\n",
      "  0.07216878 0.14433757 0.07216878 0.07216878 0.07216878 0.07216878\n",
      "  0.07216878 0.07216878 0.07216878 0.07216878 0.07216878 0.07216878\n",
      "  0.07216878 0.07216878 0.07216878 0.07216878 0.07216878 0.07216878\n",
      "  0.07216878 0.07216878 0.07216878 0.07216878 0.07216878 0.07216878\n",
      "  0.07216878 0.07216878 0.07216878 0.07216878 0.07216878 0.07216878\n",
      "  0.07216878 0.07216878 0.07216878 0.07216878 0.07216878 0.07216878\n",
      "  0.07216878 0.07216878 0.07216878 0.07216878 0.07216878 0.07216878\n",
      "  0.07216878 0.14433757 0.07216878 0.07216878 0.07216878 0.07216878\n",
      "  0.07216878 0.07216878 0.07216878 0.07216878 0.07216878 0.07216878\n",
      "  0.07216878 0.07216878 0.07216878 0.07216878 0.07216878 0.07216878\n",
      "  0.07216878 0.07216878 0.07216878 0.07216878 0.07216878 0.07216878\n",
      "  0.07216878 0.07216878 0.07216878 0.07216878 0.14433757 0.07216878\n",
      "  0.07216878 0.07216878 0.07216878 0.07216878 0.07216878 0.07216878\n",
      "  0.07216878 0.07216878 0.07216878 0.07216878 0.07216878 0.07216878\n",
      "  0.07216878 0.07216878 0.07216878 0.07216878 0.07216878 0.07216878\n",
      "  0.07216878 0.07216878 0.07216878 0.07216878 0.07216878 0.07216878\n",
      "  0.07216878 0.07216878 0.07216878 0.07216878 0.07216878 0.07216878\n",
      "  0.07216878 0.07216878 0.07216878 0.07216878 0.07216878 0.07216878\n",
      "  0.07216878 0.07216878 0.07216878 0.07216878 0.07216878 0.07216878\n",
      "  0.07216878 0.07216878 0.07216878]]\n",
      "value:  0.14433756729740646\n",
      "value:  0.14433756729740646\n",
      "value:  0.14433756729740646\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "value:  0.07216878364870323\n",
      "\n",
      " top ranking features PR:  10\n",
      "\n",
      " --------------------- PR:  10\n",
      "\n",
      "\n",
      "Words head : \n",
      "      pr                  term      rank\n",
      "136  10                remove  0.144338\n",
      "109  10                  move  0.144338\n",
      "67   10                 group  0.144338\n",
      "134  10  problems still exist  0.072169\n",
      "133  10        problems still  0.072169\n",
      "117  10               new add  0.072169\n",
      "118  10        new add remove  0.072169\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " n grams PR:  11\n",
      "\n",
      " --------------------- PR:  11\n",
      "\n",
      " Text to be analyzed:  ['Found bug : PubMed/Medline PLAIN format recognized RIS format . Provided solution : - Modified RIS ImportFilter . Now RIS format identified looking TY tag ( mandatory tag RIS format conflictual filters ) - Added new ImportFilter MedlinePlain . This import filter parses Medline files plain format ( XML ) . The import filter produced referring official Medline documentation ( http : //www.nlm.nih.gov/bsd/mms/medlineelements.html ) - Updated net.sf.jabref.core plugin.xml file order include newly added MedlinePlain import filter']\n",
      "\n",
      "\n",
      "Features : \n",
      " ['added', 'added medlineplain', 'added medlineplain import', 'added medlineplain import filter', 'added new', 'added new importfilter', 'added new importfilter medlineplain', 'bsd', 'bsd mms', 'bsd mms medlineelements', 'bsd mms medlineelements html', 'bug', 'bug pubmed', 'bug pubmed medline', 'bug pubmed medline plain', 'conflictual', 'conflictual filters', 'conflictual filters added', 'conflictual filters added new', 'core', 'core plugin', 'core plugin xml', 'core plugin xml file', 'documentation', 'documentation http', 'documentation http www', 'documentation http www nlm', 'file', 'file order', 'file order include', 'file order include newly', 'files', 'files plain', 'files plain format', 'files plain format xml', 'filter', 'filter parses', 'filter parses medline', 'filter parses medline files', 'filter produced', 'filter produced referring', 'filter produced referring official', 'filters', 'filters added', 'filters added new', 'filters added new importfilter', 'format', 'format conflictual', 'format conflictual filters', 'format conflictual filters added', 'format identified', 'format identified looking', 'format identified looking ty', 'format provided', 'format provided solution', 'format provided solution modified', 'format recognized', 'format recognized ris', 'format recognized ris format', 'format xml', 'format xml the', 'format xml the import', 'found', 'found bug', 'found bug pubmed', 'found bug pubmed medline', 'gov', 'gov bsd', 'gov bsd mms', 'gov bsd mms medlineelements', 'html', 'html updated', 'html updated net', 'html updated net sf', 'http', 'http www', 'http www nlm', 'http www nlm nih', 'identified', 'identified looking', 'identified looking ty', 'identified looking ty tag', 'import', 'import filter', 'import filter parses', 'import filter parses medline', 'import filter produced', 'import filter produced referring', 'importfilter', 'importfilter medlineplain', 'importfilter medlineplain this', 'importfilter medlineplain this import', 'importfilter now', 'importfilter now ris', 'importfilter now ris format', 'include', 'include newly', 'include newly added', 'include newly added medlineplain', 'jabref', 'jabref core', 'jabref core plugin', 'jabref core plugin xml', 'looking', 'looking ty', 'looking ty tag', 'looking ty tag mandatory', 'mandatory', 'mandatory tag', 'mandatory tag ris', 'mandatory tag ris format', 'medline', 'medline documentation', 'medline documentation http', 'medline documentation http www', 'medline files', 'medline files plain', 'medline files plain format', 'medline plain', 'medline plain format', 'medline plain format recognized', 'medlineelements', 'medlineelements html', 'medlineelements html updated', 'medlineelements html updated net', 'medlineplain', 'medlineplain import', 'medlineplain import filter', 'medlineplain this', 'medlineplain this import', 'medlineplain this import filter', 'mms', 'mms medlineelements', 'mms medlineelements html', 'mms medlineelements html updated', 'modified', 'modified ris', 'modified ris importfilter', 'modified ris importfilter now', 'net', 'net sf', 'net sf jabref', 'net sf jabref core', 'new', 'new importfilter', 'new importfilter medlineplain', 'new importfilter medlineplain this', 'newly', 'newly added', 'newly added medlineplain', 'newly added medlineplain import', 'nih', 'nih gov', 'nih gov bsd', 'nih gov bsd mms', 'nlm', 'nlm nih', 'nlm nih gov', 'nlm nih gov bsd', 'now', 'now ris', 'now ris format', 'now ris format identified', 'official', 'official medline', 'official medline documentation', 'official medline documentation http', 'order', 'order include', 'order include newly', 'order include newly added', 'parses', 'parses medline', 'parses medline files', 'parses medline files plain', 'plain', 'plain format', 'plain format recognized', 'plain format recognized ris', 'plain format xml', 'plain format xml the', 'plugin', 'plugin xml', 'plugin xml file', 'plugin xml file order', 'produced', 'produced referring', 'produced referring official', 'produced referring official medline', 'provided', 'provided solution', 'provided solution modified', 'provided solution modified ris', 'pubmed', 'pubmed medline', 'pubmed medline plain', 'pubmed medline plain format', 'recognized', 'recognized ris', 'recognized ris format', 'recognized ris format provided', 'referring', 'referring official', 'referring official medline', 'referring official medline documentation', 'ris', 'ris format', 'ris format conflictual', 'ris format conflictual filters', 'ris format identified', 'ris format identified looking', 'ris format provided', 'ris format provided solution', 'ris importfilter', 'ris importfilter now', 'ris importfilter now ris', 'sf', 'sf jabref', 'sf jabref core', 'sf jabref core plugin', 'solution', 'solution modified', 'solution modified ris', 'solution modified ris importfilter', 'tag', 'tag mandatory', 'tag mandatory tag', 'tag mandatory tag ris', 'tag ris', 'tag ris format', 'tag ris format conflictual', 'the', 'the import', 'the import filter', 'the import filter produced', 'this', 'this import', 'this import filter', 'this import filter parses', 'ty', 'ty tag', 'ty tag mandatory', 'ty tag mandatory tag', 'updated', 'updated net', 'updated net sf', 'updated net sf jabref', 'www', 'www nlm', 'www nlm nih', 'www nlm nih gov', 'xml', 'xml file', 'xml file order', 'xml file order include', 'xml the', 'xml the import', 'xml the import filter']\n",
      "\n",
      "\n",
      "X1 : \n",
      " [[2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3\n",
      "  1 1 1 1 1 1 1 1 1 1 5 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n",
      "  1 1 1 1 1 1 1 1 1 1 3 3 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n",
      "  1 1 1 3 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n",
      "  1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 1 1 1\n",
      "  1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 4 3 1 1 1 1 1 1 1 1 1\n",
      "  1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2\n",
      "  1 1 1 1 1 1]]\n",
      "\n",
      " TFIDF PR:  11\n",
      "\n",
      " --------------------- PR:  11\n",
      "\n",
      "\n",
      "Scores : \n",
      " [[0.10570328 0.05285164 0.05285164 0.05285164 0.05285164 0.05285164\n",
      "  0.05285164 0.05285164 0.05285164 0.05285164 0.05285164 0.05285164\n",
      "  0.05285164 0.05285164 0.05285164 0.05285164 0.05285164 0.05285164\n",
      "  0.05285164 0.05285164 0.05285164 0.05285164 0.05285164 0.05285164\n",
      "  0.05285164 0.05285164 0.05285164 0.05285164 0.05285164 0.05285164\n",
      "  0.05285164 0.05285164 0.05285164 0.05285164 0.05285164 0.15855493\n",
      "  0.05285164 0.05285164 0.05285164 0.05285164 0.05285164 0.05285164\n",
      "  0.05285164 0.05285164 0.05285164 0.05285164 0.26425821 0.05285164\n",
      "  0.05285164 0.05285164 0.05285164 0.05285164 0.05285164 0.05285164\n",
      "  0.05285164 0.05285164 0.05285164 0.05285164 0.05285164 0.05285164\n",
      "  0.05285164 0.05285164 0.05285164 0.05285164 0.05285164 0.05285164\n",
      "  0.05285164 0.05285164 0.05285164 0.05285164 0.05285164 0.05285164\n",
      "  0.05285164 0.05285164 0.05285164 0.05285164 0.05285164 0.05285164\n",
      "  0.05285164 0.05285164 0.05285164 0.05285164 0.15855493 0.15855493\n",
      "  0.05285164 0.05285164 0.05285164 0.05285164 0.10570328 0.05285164\n",
      "  0.05285164 0.05285164 0.05285164 0.05285164 0.05285164 0.05285164\n",
      "  0.05285164 0.05285164 0.05285164 0.05285164 0.05285164 0.05285164\n",
      "  0.05285164 0.05285164 0.05285164 0.05285164 0.05285164 0.05285164\n",
      "  0.05285164 0.05285164 0.05285164 0.15855493 0.05285164 0.05285164\n",
      "  0.05285164 0.05285164 0.05285164 0.05285164 0.05285164 0.05285164\n",
      "  0.05285164 0.05285164 0.05285164 0.05285164 0.05285164 0.10570328\n",
      "  0.05285164 0.05285164 0.05285164 0.05285164 0.05285164 0.05285164\n",
      "  0.05285164 0.05285164 0.05285164 0.05285164 0.05285164 0.05285164\n",
      "  0.05285164 0.05285164 0.05285164 0.05285164 0.05285164 0.05285164\n",
      "  0.05285164 0.05285164 0.05285164 0.05285164 0.05285164 0.05285164\n",
      "  0.05285164 0.05285164 0.05285164 0.05285164 0.05285164 0.05285164\n",
      "  0.05285164 0.05285164 0.05285164 0.05285164 0.05285164 0.05285164\n",
      "  0.05285164 0.05285164 0.05285164 0.05285164 0.05285164 0.05285164\n",
      "  0.05285164 0.05285164 0.05285164 0.05285164 0.05285164 0.05285164\n",
      "  0.05285164 0.10570328 0.10570328 0.05285164 0.05285164 0.05285164\n",
      "  0.05285164 0.05285164 0.05285164 0.05285164 0.05285164 0.05285164\n",
      "  0.05285164 0.05285164 0.05285164 0.05285164 0.05285164 0.05285164\n",
      "  0.05285164 0.05285164 0.05285164 0.05285164 0.05285164 0.05285164\n",
      "  0.05285164 0.05285164 0.05285164 0.05285164 0.05285164 0.05285164\n",
      "  0.05285164 0.21140657 0.15855493 0.05285164 0.05285164 0.05285164\n",
      "  0.05285164 0.05285164 0.05285164 0.05285164 0.05285164 0.05285164\n",
      "  0.05285164 0.05285164 0.05285164 0.05285164 0.05285164 0.05285164\n",
      "  0.05285164 0.05285164 0.10570328 0.05285164 0.05285164 0.05285164\n",
      "  0.05285164 0.05285164 0.05285164 0.05285164 0.05285164 0.05285164\n",
      "  0.05285164 0.05285164 0.05285164 0.05285164 0.05285164 0.05285164\n",
      "  0.05285164 0.05285164 0.05285164 0.05285164 0.05285164 0.05285164\n",
      "  0.05285164 0.05285164 0.05285164 0.05285164 0.05285164 0.10570328\n",
      "  0.05285164 0.05285164 0.05285164 0.05285164 0.05285164 0.05285164]]\n",
      "value:  0.264258211290845\n",
      "value:  0.21140656903267596\n",
      "value:  0.15855492677450697\n",
      "value:  0.15855492677450697\n",
      "value:  0.15855492677450697\n",
      "value:  0.15855492677450697\n",
      "value:  0.15855492677450697\n",
      "value:  0.10570328451633798\n",
      "value:  0.10570328451633798\n",
      "value:  0.10570328451633798\n",
      "value:  0.10570328451633798\n",
      "value:  0.10570328451633798\n",
      "value:  0.10570328451633798\n",
      "value:  0.10570328451633798\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "value:  0.05285164225816899\n",
      "\n",
      " top ranking features PR:  11\n",
      "\n",
      " --------------------- PR:  11\n",
      "\n",
      "\n",
      "Words head : \n",
      "      pr           term      rank\n",
      "46   11         format  0.264258\n",
      "205  11            ris  0.211407\n",
      "111  11        medline  0.158555\n",
      "82   11         import  0.158555\n",
      "206  11     ris format  0.158555\n",
      "83   11  import filter  0.158555\n",
      "35   11         filter  0.158555\n",
      "\n",
      " n grams PR:  15\n",
      "\n",
      " --------------------- PR:  15\n",
      "\n",
      " Text to be analyzed:  ['I ( ) added toggle button journaltitle field editor ( ii ) made abbreviate/unabbreviate actions change journal journaltitle fields . The latter might bit simple-minded -- field consider depend whether Biblatex mode actually turned ?']\n",
      "\n",
      "\n",
      "Features : \n",
      " ['abbreviate', 'abbreviate unabbreviate', 'abbreviate unabbreviate actions', 'abbreviate unabbreviate actions change', 'actions', 'actions change', 'actions change journal', 'actions change journal journaltitle', 'actually', 'actually turned', 'added', 'added toggle', 'added toggle button', 'added toggle button journaltitle', 'biblatex', 'biblatex mode', 'biblatex mode actually', 'biblatex mode actually turned', 'bit', 'bit simple', 'bit simple minded', 'bit simple minded field', 'button', 'button journaltitle', 'button journaltitle field', 'button journaltitle field editor', 'change', 'change journal', 'change journal journaltitle', 'change journal journaltitle fields', 'consider', 'consider depend', 'consider depend whether', 'consider depend whether biblatex', 'depend', 'depend whether', 'depend whether biblatex', 'depend whether biblatex mode', 'editor', 'editor ii', 'editor ii made', 'editor ii made abbreviate', 'field', 'field consider', 'field consider depend', 'field consider depend whether', 'field editor', 'field editor ii', 'field editor ii made', 'fields', 'fields the', 'fields the latter', 'fields the latter might', 'ii', 'ii made', 'ii made abbreviate', 'ii made abbreviate unabbreviate', 'journal', 'journal journaltitle', 'journal journaltitle fields', 'journal journaltitle fields the', 'journaltitle', 'journaltitle field', 'journaltitle field editor', 'journaltitle field editor ii', 'journaltitle fields', 'journaltitle fields the', 'journaltitle fields the latter', 'latter', 'latter might', 'latter might bit', 'latter might bit simple', 'made', 'made abbreviate', 'made abbreviate unabbreviate', 'made abbreviate unabbreviate actions', 'might', 'might bit', 'might bit simple', 'might bit simple minded', 'minded', 'minded field', 'minded field consider', 'minded field consider depend', 'mode', 'mode actually', 'mode actually turned', 'simple', 'simple minded', 'simple minded field', 'simple minded field consider', 'the', 'the latter', 'the latter might', 'the latter might bit', 'toggle', 'toggle button', 'toggle button journaltitle', 'toggle button journaltitle field', 'turned', 'unabbreviate', 'unabbreviate actions', 'unabbreviate actions change', 'unabbreviate actions change journal', 'whether', 'whether biblatex', 'whether biblatex mode', 'whether biblatex mode actually']\n",
      "\n",
      "\n",
      "X1 : \n",
      " [[1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n",
      "  1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1\n",
      "  1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]]\n",
      "\n",
      " TFIDF PR:  15\n",
      "\n",
      " --------------------- PR:  15\n",
      "\n",
      "\n",
      "Scores : \n",
      " [[0.09365858 0.09365858 0.09365858 0.09365858 0.09365858 0.09365858\n",
      "  0.09365858 0.09365858 0.09365858 0.09365858 0.09365858 0.09365858\n",
      "  0.09365858 0.09365858 0.09365858 0.09365858 0.09365858 0.09365858\n",
      "  0.09365858 0.09365858 0.09365858 0.09365858 0.09365858 0.09365858\n",
      "  0.09365858 0.09365858 0.09365858 0.09365858 0.09365858 0.09365858\n",
      "  0.09365858 0.09365858 0.09365858 0.09365858 0.09365858 0.09365858\n",
      "  0.09365858 0.09365858 0.09365858 0.09365858 0.09365858 0.09365858\n",
      "  0.18731716 0.09365858 0.09365858 0.09365858 0.09365858 0.09365858\n",
      "  0.09365858 0.09365858 0.09365858 0.09365858 0.09365858 0.09365858\n",
      "  0.09365858 0.09365858 0.09365858 0.09365858 0.09365858 0.09365858\n",
      "  0.09365858 0.18731716 0.09365858 0.09365858 0.09365858 0.09365858\n",
      "  0.09365858 0.09365858 0.09365858 0.09365858 0.09365858 0.09365858\n",
      "  0.09365858 0.09365858 0.09365858 0.09365858 0.09365858 0.09365858\n",
      "  0.09365858 0.09365858 0.09365858 0.09365858 0.09365858 0.09365858\n",
      "  0.09365858 0.09365858 0.09365858 0.09365858 0.09365858 0.09365858\n",
      "  0.09365858 0.09365858 0.09365858 0.09365858 0.09365858 0.09365858\n",
      "  0.09365858 0.09365858 0.09365858 0.09365858 0.09365858 0.09365858\n",
      "  0.09365858 0.09365858 0.09365858 0.09365858 0.09365858 0.09365858]]\n",
      "value:  0.1873171623163388\n",
      "value:  0.1873171623163388\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "value:  0.0936585811581694\n",
      "\n",
      " top ranking features PR:  15\n",
      "\n",
      " --------------------- PR:  15\n",
      "\n",
      "\n",
      "Words head : \n",
      "     pr                     term      rank\n",
      "61  15             journaltitle  0.187317\n",
      "42  15                    field  0.187317\n",
      "0   15               abbreviate  0.093659\n",
      "69  15             latter might  0.093659\n",
      "79  15  might bit simple minded  0.093659\n",
      "78  15         might bit simple  0.093659\n",
      "77  15                might bit  0.093659\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "0    None\n",
       "1    None\n",
       "2    None\n",
       "3    None\n",
       "4    None\n",
       "dtype: object"
      ]
     },
     "execution_count": 186,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_title_body_API_5.apply(run_metrics1, axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "metadata": {},
   "outputs": [],
   "source": [
    "best = words.iloc[0:10, ]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 132,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>term</th>\n",
       "      <th>rank</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>61</td>\n",
       "      <td>method jabrefpreferences class</td>\n",
       "      <td>0.334844</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>22</td>\n",
       "      <td>dblp seems send</td>\n",
       "      <td>0.333333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>106</td>\n",
       "      <td>tried change save</td>\n",
       "      <td>0.333333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>77</td>\n",
       "      <td>pre class verbatim</td>\n",
       "      <td>0.333333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>71</td>\n",
       "      <td>on click instead</td>\n",
       "      <td>0.333333</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                               term      rank\n",
       "61   method jabrefpreferences class  0.334844\n",
       "22                  dblp seems send  0.333333\n",
       "106               tried change save  0.333333\n",
       "77               pre class verbatim  0.333333\n",
       "71                 on click instead  0.333333"
      ]
     },
     "execution_count": 132,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "best.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "def create_test(lines):\n",
    "    \n",
    "    line_test = []\n",
    "    count = 0\n",
    "    \n",
    "    for k, v in lines.items():\n",
    "        print(\"line:\",lines)\n",
    "        print (\"k; \", k)\n",
    "        count = count +1\n",
    "        if count<20:\n",
    "            if k == 'pr':\n",
    "                #pr = v,\",\"\n",
    "                #test_file.append(pr)\n",
    "                #print (pr)\n",
    "                pass\n",
    "            else:\n",
    "                if k == 'term':\n",
    "                    pass\n",
    "                else:\n",
    "                    value = v,\",\"\n",
    "                    print ( \"value: \", value)\n",
    "                    #test_file.append(value)\n",
    "                    line_test.append(value)\n",
    "    return line_test\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "test_file = []\n",
    "\n",
    "def create_test(lines):\n",
    " \n",
    "    for i, v in lines.items():\n",
    "        \n",
    "        if j == 'PR':\n",
    "            pr = v,\",\"\n",
    "            test_file.append(pr)\n",
    "            #print (pr)\n",
    "        else:\n",
    "            value = v,\",\"\n",
    "            test_file.append(value)\n",
    "    test_csv = pd.DataFrame(test_file)   \n",
    "    test_csv.to_csv('/Users/fd252/Documents/Cursos3/NAU/Research2/Python/data/test_file.csv', encoding='utf-8', header=False, index=False, sep='\\t')    \n",
    "    np.savetxt(r'/Users/fd252/Documents/Cursos3/NAU/Research2/Python/data/test_file.txt', test_csv.values, fmt='%s', delimiter=' ')"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
